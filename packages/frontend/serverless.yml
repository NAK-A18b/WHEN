service:
  name: when-notification-app
  bucketName: when-webapp
  assetsUrl: https://s3.eu-central-1.amazonaws.com/${self:service.bucketName}

provider:
  name: aws
  runtime: nodejs8.10
  environment:
    SUBSCRIBER_TABLE: 'when-subscriber-table'
    CONNECTION_TABLE: 'when-connection-table'
    CENTURIA_TABLE: 'when-centuria-table'

plugins:
  - serverless-finch
  - serverless-offline

custom:
  serverless-offline:
    port: 4000
  client:
    bucketName: ${self:service.bucketName}
    distributionFolder: client/build

package:
  include:
    - server/node_modules/**
    - server/src/**
  exclude:
    - /**

functions:
  graphql:
    handler: server/src/handler.graphqlHandler
    events:
      - http:
          path: graphql
          method: post
          cors: true
      - http:
          path: graphql
          method: get

resources:
  Resources:
    WebappProxyResource:
      Type: AWS::ApiGateway::Resource
      Properties:
        RestApiId:
          Ref: ApiGatewayRestApi
        ParentId:
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        PathPart: '{proxy+}'

    WebappProxyMethod:
      Type: AWS::ApiGateway::Method
      Properties:
        HttpMethod: ANY
        ResourceId:
          Ref: WebappProxyResource
        RestApiId:
          Ref: ApiGatewayRestApi
        AuthorizationType: NONE
        RequestParameters:
          method.request.path.proxy: true
          method.request.header.Accept: true
        Integration:
          CacheKeyParameters:
            - 'method.request.path.proxy'
          RequestParameters:
            integration.request.path.proxy: 'method.request.path.proxy'
          IntegrationHttpMethod: ANY
          Type: HTTP_PROXY
          Uri: ${self:service.assetsUrl}/{proxy}
          PassthroughBehavior: WHEN_NO_MATCH
          IntegrationResponses:
            - StatusCode: 200

    WebappRootProxyMethod:
      Type: AWS::ApiGateway::Method
      Properties:
        HttpMethod: ANY
        ResourceId:
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        RestApiId:
          Ref: ApiGatewayRestApi
        AuthorizationType: NONE
        RequestParameters:
          method.request.path.proxy: true
          method.request.header.Accept: true
        Integration:
          CacheKeyParameters:
            - 'method.request.path.proxy'
          RequestParameters:
            integration.request.path.proxy: 'method.request.path.proxy'
          IntegrationHttpMethod: ANY
          Type: HTTP_PROXY
          Uri: ${self:service.assetsUrl}/index.html
          PassthroughBehavior: WHEN_NO_MATCH
          IntegrationResponses:
            - StatusCode: 200